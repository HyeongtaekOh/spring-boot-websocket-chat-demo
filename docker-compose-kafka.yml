version: "3"
services:
  kafka_b:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka_b
    hostname: kafka_b
    ports:
      # <host_port>:<container-port> 매핑
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
      - "./server.properties:/opt/bitnami/kafka/config/kraft/server.properties"
    networks:
      - kafka_network
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka_b:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=myKafkaCluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka_b:9094
      - DYNAMIC_CONFIG_ENABLED=true
      - LOGGING_LEVEL_ROOT=DEBUG
    depends_on:
      - kafka_b
    networks:
      - kafka_network
    ports:
      - "8989:8080"
volumes:
  kafka_data:
    driver: local
networks:
  kafka_network:
    driver: bridge
